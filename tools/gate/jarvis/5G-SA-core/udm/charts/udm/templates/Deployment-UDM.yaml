{{- define "Deployment-UDM" -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "helpers.labels.fullname" . }}
  labels: {{- include "helpers.labels.labels" . | nindent 4 }}
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
  replicas: 1
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels: {{- include "helpers.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "helpers.labels.labels" . | nindent 8 }}
      annotations:
       checksum/config: {{ include "helpers.config.hash" ( dict "Global" $ "TemplateName" "ConfigMap-UDM.yaml" ) }}
    spec:
      nodeSelector:
{{ include "helpers.pod.node_selector" ( dict "Global" $ "Application" "udm" ) | nindent 8 }}
      containers:
      - name: udm
        image: {{ include "helpers.pod.container.image" ( dict "Global" $ "Application" "udm" ) }}
        imagePullPolicy: {{ .Values.images.pull.policy | quote }}
        command:
          - /usr/bin/open5gs-udmd
        args:
          - -c
          - /etc/open5gs/udm.yaml
        volumeMounts:
          - name: config
            mountPath: /etc/open5gs/udm.yaml
            subPath: udm.yaml
        livenessProbe:
          tcpSocket:
            port: {{ index $.Values.config "udm.yaml" "udm" "sbi" "port" }}
        readinessProbe:
          tcpSocket:
            port: {{ index $.Values.config "udm.yaml" "udm" "sbi" "port" }}
      volumes:
      - name: config
        configMap:
          name: {{ template "helpers.labels.fullname" . }}
          items:
          - key: udm.yaml
            path: udm.yaml
...
{{- end -}}
{{- include "helpers.template.overlay" ( dict "Global" $ "template_definition" "Deployment-UDM" ) }}
