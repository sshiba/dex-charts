{{- define "Deployment-MongoDB" -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "helpers.labels.fullname" . }}
  labels: {{- include "helpers.labels.labels" . | nindent 4 }}
spec:
  replicas: 1
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels: {{- include "helpers.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "helpers.labels.labels" . | nindent 8 }}
      annotations:
       checksum/config: {{ include "helpers.config.hash" ( dict "Global" $ "TemplateName" "ConfigMap-MongoDB.yaml" ) }}
    spec:
      nodeSelector:
{{ include "helpers.pod.node_selector" ( dict "Global" $ "Application" "mongodb" ) | nindent 8 }}
      containers:
      - name: mongodb
        image: {{ include "helpers.pod.container.image" ( dict "Global" $ "Application" "mongodb" ) }}
        imagePullPolicy: {{ .Values.images.pull.policy | quote }}
        command:
          - /usr/bin/mongod
        args:
          - --config
          - /etc/mongo/mongod.conf
        volumeMounts:
          - name: config
            mountPath: /etc/mongo/mongod.conf
            subPath: mongod.conf
          - name: data
            mountPath: /var/lib/mongodb
        livenessProbe:
          tcpSocket:
            port: {{ index $.Values.config "mongod.conf" "net" "port" }}
        readinessProbe:
          tcpSocket:
            port: {{ index $.Values.config "mongod.conf" "net" "port" }}
      volumes:
      - name: config
        configMap:
          name: {{ template "helpers.labels.fullname" . }}
          items:
          - key: mongod.conf
            path: mongod.conf
      - name: data
        emptyDir: {}
...
{{- end -}}
{{- include "helpers.template.overlay" ( dict "Global" $ "template_definition" "Deployment-MongoDB" ) }}
