apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-images
  namespace: {{ $.Release.Namespace }}
spec:
  description: >-
    This task builds images if source is provided
  workspaces:
    - name: k8s_cluster_data
    - name: development_pipeline_data
  steps:
    - name: build-image
      image: {{ $.Values.tasks.image.buildImage }}
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
      env:
      # Connect to the sidecar over TCP, with TLS.
      - name: DOCKER_HOST
        value: tcp://localhost:2376
      # Verify TLS.
      - name: DOCKER_TLS_VERIFY
        value: '1'
      # Use the certs generated by the sidecar daemon.
      - name: DOCKER_CERT_PATH
        value: /certs/client
      script: |
        #!/usr/bin/env sh
        ansible-playbook -vvv  {{ $.Values.tasks.image.buildPlaybook }} -i hosts -e @"$(workspaces.k8s_cluster_data.path)/development.yaml"
        docker images
        # TODO copy JSON file to shared workspace to make it available for other tasks
        # TODO copy logs and scan results to shared location
  sidecars:
    - image: {{ $.Values.tasks.image.sidecarServer }}
      name: server
      args:
        - --storage-driver=vfs
        - --userland-proxy=false
        - --debug
        - --insecure-registry={{ $.Values.tasks.image.insecureRegistry }}
      securityContext:
        privileged: true
      env:
      # Write generated certs to the path shared with the client.
      - name: DOCKER_TLS_CERTDIR
        value: /certs
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
      # Wait for the dind daemon to generate the certs it will share with the
      # client.
      readinessProbe:
        periodSeconds: 1
        exec:
          command: ['ls', '/certs/client/ca.pem']
  volumes:
    - name: dind-certs
      emptyDir: {}
